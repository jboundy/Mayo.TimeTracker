// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(TimeTrackerContext))]
    [Migration("20230328191716_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("DAL.ActivityTask", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            id = 1,
                            type = "ClaimScrubber"
                        },
                        new
                        {
                            id = 2,
                            type = "Correspondence"
                        },
                        new
                        {
                            id = 3,
                            type = "CBR"
                        },
                        new
                        {
                            id = 4,
                            type = "Education"
                        },
                        new
                        {
                            id = 5,
                            type = "Emails"
                        },
                        new
                        {
                            id = 6,
                            type = "ErrorChecks"
                        },
                        new
                        {
                            id = 7,
                            type = "FollowDenial"
                        },
                        new
                        {
                            id = 8,
                            type = "RmindersBillingInqu"
                        },
                        new
                        {
                            id = 9,
                            type = "Meetings"
                        },
                        new
                        {
                            id = 10,
                            type = "Reports"
                        },
                        new
                        {
                            id = 11,
                            type = "Rycan"
                        },
                        new
                        {
                            id = 12,
                            type = "SpecialProjects"
                        },
                        new
                        {
                            id = 13,
                            type = "Training"
                        },
                        new
                        {
                            id = 14,
                            type = "SystemIssues"
                        },
                        new
                        {
                            id = 15,
                            type = "Break"
                        },
                        new
                        {
                            id = 16,
                            type = "Other"
                        });
                });

            modelBuilder.Entity("DAL.Person", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("DAL.TimeAlloted", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActivityTaskid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Personid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("amount")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("elapsedTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("start")
                        .HasColumnType("TEXT");

                    b.Property<int>("taskId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("ActivityTaskid");

                    b.HasIndex("Personid");

                    b.ToTable("TimeAllots");
                });

            modelBuilder.Entity("DAL.TimeAlloted", b =>
                {
                    b.HasOne("DAL.ActivityTask", "ActivityTask")
                        .WithMany()
                        .HasForeignKey("ActivityTaskid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Person", null)
                        .WithMany("activities")
                        .HasForeignKey("Personid");

                    b.Navigation("ActivityTask");
                });

            modelBuilder.Entity("DAL.Person", b =>
                {
                    b.Navigation("activities");
                });
#pragma warning restore 612, 618
        }
    }
}
